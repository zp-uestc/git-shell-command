将本地的代码关联到远程仓库
1.在github上创建仓库（create new repository）
填入仓库名字（不能和已有仓库名字相同）、描述、权限（私有的貌似要收费）、选择初始化的时候是否创建README文件（Markdown格式）、是否添加gitignore文件、是否添加版权（一般是选 GNU General Public License 或者 Apache License，关于这两个协议，大家可以去网上搜一下），然后点击下面的 Create repository就完成了远程仓库创建
2.将本地仓库和远程仓库关联
echo # repository name>> README.md // 创建 README.md文件，并将# repository name 写入到文件 
git init
git add README.md
git commit -m "first commit"
git remote add origin git@github.com:your name/repository name.git // 将本地仓库和你自己的远程仓库关联起来，origin是仓库的名字
git push -u origin master // 将本地仓库的文件推送到远程仓库，可能你的本地项目关联着几个仓
将远程的代码clone到本地仓库
1.git clone现有的项目（https | SSH）
例如: git clone git@github.com:xxxxx/yyy.git
2.SSH设置：
检查你的电脑中是否有密匙对id_rsa id_rsa.pub
没有的话，创建密匙对 ssh-keygen -t rsa -b 4096 -C "你的git中设置的邮箱"
检查你的ssh-agent是否是活跃的 eval "$(ssh-agent -s)"
将私匙添加到 ssh-add ~/.ssh/id_rsa
然后将公匙复制后添加到git网站中，如github
测试是否能够连接ssh -T git@github.com

来自 <https://segmentfault.com/a/1190000012081004> 

git 重命名本地分支，并提交到远程
1.重命名 git branch -m oldBranchName newBranchName
2.删除远程分支：git push origin :oldBranchName 
3.将重命名过的分支提交：git push origin newBranchName

来自 <https://www.cnblogs.com/hechangshou/p/9008297.html> 


git branch -m master <BRANCH>
git fetch origin
git branch -u origin/<BRANCH> <BRANCH>


本地创建分支
首先进入本地git仓库目录下，打开git bash环境
使用git branch命令可以查看到，当前目录下分支
使用git branch命令可以查看到，当前目录下只有一个master分支
创建失败时需要先git add .,git commit 
使用git branch 分支名称创建分支，创建完成后通过git branch可以看到本地已经多出了一个新建的分支
来自 <https://jingyan.baidu.com/article/adc81513b95a20f723bf73bf.html> 

Git branch && Git checkout常见用法
git branch 和 git checkout经常在一起使用，所以在此将它们合在一起
1.Git branch
一般用于分支的操作，比如创建分支，查看分支等等，
1.1 git branch
不带参数：列出本地已经存在的分支，并且在当前分支的前面用"*"标记
1.2 git branch -r
查看远程版本库分支列表
1.3 git branch -a
查看所有分支列表，包括本地和远程
1.4 git branch dev
创建名为dev的分支，创建分支时需要是最新的环境，创建分支但依然停留在当前分支
1.5 git branch -d dev
删除dev分支，如果在分支中有一些未merge的提交，那么会删除分支失败，此时可以使用 git branch -D dev：强制删除dev分支，
1.6 git branch -vv 
可以查看本地分支对应的远程分支
1.7 git branch -m oldName newName
给分支重命名
2. Git checkout
1. 操作文件  2. 操作分支
2.1 操作文件
2.1.1 git checkout filename 放弃单个文件的修改
2.1.2 git checkout . 放弃当前目录下的修改
2.2 操作分支
2.2.1 git checkout master 将分支切换到master
2.2.2 git checkout -b master 如果分支存在则只切换分支，若不存在则创建并切换到master分支，repo start是对git checkout -b这个命令的封装，将所有仓库的分支都切换到master，master是分支名，
2.3 查看帮助
git checkout --help
当然git checkout还有许多命令，但这些已经能满足我们日常开发所需

来自 <https://www.cnblogs.com/qianqiannian/p/6011404.html> 


git remote add origin https://github.com/zp-uestc/vue3learn.git


git branch -m master main
git branch --set-upstream-to=origin/main master

git clone https://github.com/zp-uestc/vue3learn.git -b main


git 重命名本地分支，并提交到远程
1.重命名 git branch -m oldBranchName newBranchName
2.删除远程分支：git push origin :oldBranchName 
3.将重命名过的分支提交：git push origin newBranchName

来自 <https://www.cnblogs.com/hechangshou/p/9008297.html> 







